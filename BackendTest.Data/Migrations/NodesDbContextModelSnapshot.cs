// <auto-generated />
using BackendTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace BackendTest.Migrations
{
    [DbContext(typeof(NodesDbContext))]
    partial class NodesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendTestWebAPI.Data.Entities.Node", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NodeId"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentNodeId")
                        .HasColumnType("int");

                    b.HasKey("NodeId");

                    b.ToTable("Nodes", (string)null);

                    b.HasData(
                        new
                        {
                            NodeId = 1,
                            Name = "First"
                        },
                        new
                        {
                            NodeId = 2,
                            Name = "Second",
                            ParentNodeId = 1
                        },
                        new
                        {
                            NodeId = 3,
                            Name = "Third",
                            ParentNodeId = 1
                        },
                        new
                        {
                            NodeId = 4,
                            Name = "Fourth",
                            ParentNodeId = 2
                        },
                        new
                        {
                            NodeId = 5,
                            Name = "Fifth",
                            ParentNodeId = 2
                        },
                        new
                        {
                            NodeId = 6,
                            Name = "Sixth",
                            ParentNodeId = 4
                        },
                        new
                        {
                            NodeId = 7,
                            Name = "Seventh",
                            ParentNodeId = 6
                        },
                        new
                        {
                            NodeId = 8,
                            Name = "Eighth",
                            ParentNodeId = 7
                        },
                        new
                        {
                            NodeId = 9,
                            Name = "Nineth",
                            ParentNodeId = 8
                        },
                        new
                        {
                            NodeId = 10,
                            Name = "Tenth",
                            ParentNodeId = 3
                        },
                        new
                        {
                            NodeId = 11,
                            Name = "Eleventh",
                            ParentNodeId = 10
                        },
                        new
                        {
                            NodeId = 12,
                            Name = "Twelfth",
                            ParentNodeId = 11
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
